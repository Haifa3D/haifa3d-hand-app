# https://docs.microsoft.com/azure/devops/pipelines/ecosystems/android
pool:
  vmImage: 'ubuntu-latest'

variables:
  DroidDir: '$(System.DefaultWorkingDirectory)/src/android/Haifa3d'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool

- script: ./nbgv cloud -c -a
  displayName: Set Version

- task: Gradle@2
  displayName: assembleDebug
  inputs:
    workingDirectory: '$(DroidDir)'
    gradleWrapperFile: '$(DroidDir)/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'

- publish: $(DroidDir)/app/build/outputs/apk
  artifact: apk

- task: Gradle@2
  displayName: bundleRelease
  inputs:
    workingDirectory: '$(DroidDir)'
    gradleWrapperFile: '$(DroidDir)/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'bundleRelease'

- publish: $(DroidDir)/app/build/outputs/bundle/
  artifact: aab

# Download pipeline artifacts
# Download build and pipeline artifacts
- task: DownloadPipelineArtifact@2
  inputs:
    source: 'current' # Options: current, specific
    #project: # Required when source == Specific
    #pipeline: # Required when source == Specific
    #preferTriggeringPipeline: false # Optional
    #runVersion: 'latest' # Required when source == Specific# Options: latest, latestFromBranch, specific
    #runBranch: 'refs/heads/master' # Required when source == Specific && RunVersion == LatestFromBranch
    #runId: # Required when source == Specific && RunVersion == Specific
    #tags: # Optional
    #artifact: # Optional
    patterns: |
      **/*.apk
      **/*.aab
    path: '$(Pipeline.Workspace)/githubrelease'

# GitHub Release
# Create, edit, or delete a GitHub release
- task: GitHubRelease@1
  condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/heads/release/'))
  inputs:
    gitHubConnection: georg-jung-oauth
    repositoryName: '$(Build.Repository.Name)' 
    action: 'create' # Options: create, edit, delete
    tagSource: userSpecifiedTag
    #tagPattern: # Optional
    tag: 'v$(GitAssemblyInformationalVersion)' # Required when action == Edit || Action == Delete || TagSource == Manual
    #title: # Optional
    #releaseNotesSource: 'file' # Optional. Options: file, input
    #releaseNotesFile: # Optional
    #releaseNotes: # Optional
    assets: '$(Pipeline.Workspace)/githubrelease/*' # Optional
    #assetUploadMode: 'delete' # Optional. Options: delete, replace
    isDraft: true # Optional
    #isPreRelease: false # Optional
    addChangeLog: true # Optional
    #releaseTag: # Required when compareWith == LastReleaseByTag