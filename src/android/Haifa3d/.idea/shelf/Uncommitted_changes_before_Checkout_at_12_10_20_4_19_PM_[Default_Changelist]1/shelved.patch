Index: app/src/main/java/com/gjung/haifa3d/ConnectedActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gjung.haifa3d\n\nimport android.content.Intent\nimport android.os.Bundle\nimport android.view.Menu\nimport android.view.MenuItem\nimport android.view.View\nimport android.widget.PopupMenu\nimport android.widget.Toast\nimport androidx.lifecycle.Observer\nimport androidx.navigation.findNavController\nimport androidx.navigation.ui.AppBarConfiguration\nimport androidx.navigation.ui.setupActionBarWithNavController\nimport androidx.navigation.ui.setupWithNavController\nimport com.gjung.haifa3d.databinding.ActivityConnectedBinding\nimport com.google.android.material.bottomnavigation.BottomNavigationView\nimport com.gjung.haifa3d.R\nimport com.google.android.material.navigation.NavigationView\n\n\nclass ConnectedActivity : BleActivity() {\n\n    private lateinit var appBarConfiguration: AppBarConfiguration\n    private lateinit var binding: ActivityConnectedBinding\n\n    private var isInFront = false\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityConnectedBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n        setSupportActionBar(binding.appbar.toolbar)\n        this.setTitle(\"Connected\")\n        val navView: NavigationView = findViewById(R.id.nav_view)\n\n        val navController = findNavController(R.id.nav_host_fragment)\n        // Passing each menu ID as a set of Ids because each\n        // menu should be considered as top level destinations.\n        appBarConfiguration = AppBarConfiguration(\n            setOf(\n            ), binding.drawerLayout\n        )\n        //setupActionBarWithNavController(navController, appBarConfiguration)\n        //binding.navView.setupWithNavController(navController)\n        binding.disconnectButton.setOnClickListener { disconnect() }\n\n        val bottomNavView: BottomNavigationView = findViewById(R.id.bottom_navigation)\n        bottomNavView.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener)\n\n    }\n\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n        when (item.itemId) {\n                R.id.nav_about -> {\n            Toast.makeText(this@ConnectedActivity, item.title, Toast.LENGTH_SHORT).show()\n            findNavController(R.id.nav_host_fragment).navigate(R.id.nav_about)\n        }\n            R.id.disconnect_button -> {\n                Toast.makeText(this@ConnectedActivity, item.title, Toast.LENGTH_SHORT).show()\n                disconnect()\n            }\n        }\n        return true\n    }\n\n    private fun disconnect() {\n        bleService?.manager?.disconnect()\n    }\n\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        menuInflater.inflate(R.menu.menu_main, menu)\n        return true\n    }\n\n    override fun onServiceConnected() {\n        if (bleService?.manager?.isConnected != true) {\n            val intent = Intent(this, MainActivity::class.java)\n            startActivity(intent)\n            finish()\n        }\n        bleService?.manager?.state?.observe(this, Observer {\n            if (it.isConnected)\n                return@Observer\n            if (isInFront) {\n                val intent = Intent(this, MainActivity::class.java)\n                startActivity(intent)\n            }\n            finish()\n        })\n    }\n\n    override fun onServiceDisconnected() {\n        // if our service was killed it's pointless to stay alive\n        finish()\n    }\n\n\n    private val mOnNavigationItemSelectedListener =\n        BottomNavigationView.OnNavigationItemSelectedListener { item ->\n            when (item.itemId) {\n                R.id.nav_home -> {\n                    findNavController(R.id.nav_host_fragment).navigate(R.id.nav_home)\n                }\n                R.id.nav_livecontrol -> {\n                    findNavController(R.id.nav_host_fragment).navigate(R.id.nav_livecontrol)\n                }\n                R.id.nav_presets -> {\n                    findNavController(R.id.nav_host_fragment).navigate(R.id.nav_presets)\n                }\n                R.id.nav_configuration -> {\n                    findNavController(R.id.nav_host_fragment).navigate(R.id.nav_configuration)\n                }\n\n            }\n            false\n        }\n\n    override fun onResume() {\n        super.onResume()\n        isInFront = true\n        if (bleService?.manager?.isConnected == false) {\n            val intent = Intent(this, MainActivity::class.java)\n            startActivity(intent)\n            finish()\n        }\n    }\n\n    override fun onPause() {\n        isInFront = false\n        super.onPause()\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/gjung/haifa3d/ConnectedActivity.kt	(revision 1a116b0e7922382ab0c33566a52b2db28b0cb21f)
+++ app/src/main/java/com/gjung/haifa3d/ConnectedActivity.kt	(date 1607589605000)
@@ -18,6 +18,7 @@
 import com.google.android.material.navigation.NavigationView
 
 
+
 class ConnectedActivity : BleActivity() {
 
     private lateinit var appBarConfiguration: AppBarConfiguration
